services:
  client:
    container_name: react
    build:
      context: ./client
      dockerfile: Dockerfile
    volumes:
      - ./client:/app  # Mount the client directory to allow HMR
      - /app/node_modules  # Anonymous volume for node_modules to avoid conflicts
    ports:
      - "5173:5173"
    environment:
      - CHOKIDAR_USEPOLLING=true  # Use polling for file changes, necessary for Docker
    networks:
      - app-network
    depends_on:
      - server

  server:
    container_name: node
    build:
      context: ./server
      dockerfile: Dockerfile
    ports:
      - "5000:5000"
    environment:
      - DB_USER=postgres
      - DB_PASSWORD=password
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_NAME=your_database_name
    volumes:
      - ./server:/app  # Mount the server directory for live updates
      - /app/node_modules  # Anonymous volume for node_modules
    networks:
      - app-network
    depends_on:
      - postgres

  postgres:
    container_name: postgres
    image: postgres:15
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: your_database_name
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./server/config/init:/docker-entrypoint-initdb.d
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  postgres-data:

